{{ define "model/additional/downloadable" }}
  {{- if eq $.Name "Media" }}
    // Directory returns the directory in which the {{ $.Name }} is stored
    func (m *Media) Directory() string {
      return fmt.Sprintf("/%s/posts/%d", m.Edges.Post.Edges.Subscription.Username, m.Edges.Post.ID)
    }
  {{- end }}

  {{- if eq $.Name "MessageMedia" }}
    // Directory returns the directory in which the {{ $.Name }} is stored
    func (m MessageMedia) Directory() string {
	    return fmt.Sprintf("/%s/messages/%d", m.Edges.Message.Edges.Subscription.Username, m.Edges.Message.ID)
    }
  {{- end }}

  {{- if or (eq $.Name "Media") (eq $.Name "MessageMedia") }}

    // Filename returns the filename of the {{ $.Name }}
    func ({{ $.Receiver }} *{{ $.Name }}) Filename() string {
      u, _ := url.Parse({{ $.Receiver }}.GetFull())
      return path.Base(u.Path)
    }

    // MarkDownloaded marks the media as downloaded
    func ({{ $.Receiver }} *{{ $.Name }}) MarkDownloaded(ctx context.Context) error {
      return {{ $.Receiver }}.Update().SetDownloadedAt(time.Now()).Exec(ctx)
    }
  {{- end }}
{{ end }}
