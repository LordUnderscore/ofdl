// Code generated by ent, DO NOT EDIT.

package media

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the media type in the database.
	Label = "media"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPostID holds the string denoting the post_id field in the database.
	FieldPostID = "post_id"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldFull holds the string denoting the full field in the database.
	FieldFull = "full"
	// FieldDownloadedAt holds the string denoting the downloaded_at field in the database.
	FieldDownloadedAt = "downloaded_at"
	// FieldStashID holds the string denoting the stash_id field in the database.
	FieldStashID = "stash_id"
	// FieldOrganizedAt holds the string denoting the organized_at field in the database.
	FieldOrganizedAt = "organized_at"
	// Table holds the table name of the media in the database.
	Table = "media"
)

// Columns holds all SQL columns for media fields.
var Columns = []string{
	FieldID,
	FieldPostID,
	FieldType,
	FieldFull,
	FieldDownloadedAt,
	FieldStashID,
	FieldOrganizedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "media"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"post_id",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the Media queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByPostID orders the results by the post_id field.
func ByPostID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPostID, opts...).ToFunc()
}

// ByType orders the results by the type field.
func ByType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldType, opts...).ToFunc()
}

// ByFull orders the results by the full field.
func ByFull(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFull, opts...).ToFunc()
}

// ByDownloadedAt orders the results by the downloaded_at field.
func ByDownloadedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDownloadedAt, opts...).ToFunc()
}

// ByStashID orders the results by the stash_id field.
func ByStashID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldStashID, opts...).ToFunc()
}

// ByOrganizedAt orders the results by the organized_at field.
func ByOrganizedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOrganizedAt, opts...).ToFunc()
}
